name: maven checks

on:
  pull_request:
  push:

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true
  MAVEN_OPTS: "-Xmx1024M -XX:+ExitOnOutOfMemoryError"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError"
  RETRY: .github/bin/retry

concurrency:
  group: "${{github.workflow}}-${{github.ref}}"

  # Cancel in-progress jobs for efficiency. Exclude the `release-0.293-clp-connector` branch so
  # that each commit to release-0.293-clp-connector is checked completely.
  cancel-in-progress: "${{github.ref != 'refs/heads/release-0.293-clp-connector'}}"

jobs:
  maven-checks:
    strategy:
      fail-fast: false
      matrix:
        java: [ 8.0.442, 17.0.13 ]
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Free Disk Space
        run: |
          df -h
          sudo apt-get clean
          df -h
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Download nodejs to maven cache
        run: .github/bin/download_nodejs
      - name: Maven Checks
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install -B -V -T 1C -DskipTests -Dmaven.javadoc.skip=true --no-transfer-progress -P ci -pl '!presto-test-coverage,!:presto-docs'
      - name: Upload presto-server
        if: matrix.java == '8.0.442'
        uses: actions/upload-artifact@v4
        with:
          name: presto-server
          path: presto-server/target/presto-server-0.293.tar.gz
          if-no-files-found: "error"
          retention-days: 1
      - name: Upload presto-cli
        if: matrix.java == '8.0.442'
        uses: actions/upload-artifact@v4
        with:
          name: presto-cli
          path: presto-cli/target/presto-cli-0.293-executable.jar
          if-no-files-found: "error"
          retention-days: 1
      - name: Clean Maven Output
        run: ./mvnw clean -pl '!:presto-server,!:presto-cli,!presto-test-coverage'
  presto-coordinator-image:
    name: presto-coordinator-image
    needs: maven-checks
    runs-on: ubuntu-22.04
    steps:
      - uses: "actions/checkout@v4"
        with:
          submodules: "recursive"

      - name: Download presto-server
        uses: actions/download-artifact@v4
        with:
          name: presto-server
          path: ./docker

      - name: Download presto-cli
        uses: actions/download-artifact@v4
        with:
          name: presto-cli
          path: ./docker

      - name: "Login to image registry"
        uses: "docker/login-action@v3"
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: "Set up container image metadata"
        id: "meta"
        uses: "docker/metadata-action@v5"
        with:
          images: >-
            ghcr.io/${{github.repository}}/coordinator
          tags: |-
            type=raw,value=dev

      - name: "Build and push"
        uses: "docker/build-push-action@v6"
        with:
          build-args: |-
            JMX_PROMETHEUS_JAVA_AGENT_VERSION=0.20.0
            PRESTO_VERSION=0.293
          context: "./docker/"
          file: "./docker/Dockerfile"
          push: >-
            ${{github.event_name != 'pull_request'
            && github.ref == 'refs/heads/release-0.293-clp-connector'}}
          tags: "${{steps.meta.outputs.tags}}"
          labels: "${{steps.meta.outputs.labels}}"
